version: '3'
services:

  #PHP
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - WITH_XDEBUG=true
    image: app
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      PHP_IDE_CONFIG: serverName=barrilete
    working_dir: /var/www
    env_file: .env
    volumes:
      - ./:/var/www
      - ./docker/config/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    ports:
      - 6001:6001
    expose:
      - 6001

  #Nginx
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./:/var/www
      - ./docker/config/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/config/nginx/certs/:/etc/nginx/certs/
    networks:
      - app-network

  #MySQL
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: barrilete_db
      MYSQL_ROOT_PASSWORD: ba5Tgl28sy
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

  #Elasticsearch
  elasticsearch:
    image: summasolutions/elasticsearch:${ES_VERSION}
    env_file: .env
    ports:
      - "9200"
      - "9300"
    volumes:
      - "./docker/volumes/elasticsearch:/usr/share/elasticsearch/data"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    networks:
      - app-network

#Redes
networks:
  app-network:
    driver: bridge
#Volumenes
volumes:
  dbdata:
    driver: local
